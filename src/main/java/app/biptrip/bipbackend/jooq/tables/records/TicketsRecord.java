/*
 * This file is generated by jOOQ.
 */
package app.biptrip.bipbackend.jooq.tables.records;


import app.biptrip.bipbackend.jooq.tables.Tickets;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TicketsRecord extends UpdatableRecordImpl<TicketsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tickets.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tickets.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.tickets.event_id</code>.
     */
    public void setEventId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tickets.event_id</code>.
     */
    public Integer getEventId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.tickets.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tickets.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.tickets.qr_url</code>.
     */
    public void setQrUrl(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.tickets.qr_url</code>.
     */
    public String getQrUrl() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TicketsRecord
     */
    public TicketsRecord() {
        super(Tickets.TICKETS);
    }

    /**
     * Create a detached, initialised TicketsRecord
     */
    public TicketsRecord(Integer id, Integer eventId, Integer userId, String qrUrl) {
        super(Tickets.TICKETS);

        setId(id);
        setEventId(eventId);
        setUserId(userId);
        setQrUrl(qrUrl);
        resetTouchedOnNotNull();
    }
}
