/*
 * This file is generated by jOOQ.
 */
package app.biptrip.bipbackend.jooq.tables.records;


import app.biptrip.bipbackend.jooq.tables.Events;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EventsRecord extends UpdatableRecordImpl<EventsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.events.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.events.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.events.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.events.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.events.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.events.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.events.location</code>.
     */
    public void setLocation(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.events.location</code>.
     */
    public String getLocation() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.events.price</code>.
     */
    public void setPrice(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.events.price</code>.
     */
    public Integer getPrice() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.events.tickets_available</code>.
     */
    public void setTicketsAvailable(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.events.tickets_available</code>.
     */
    public Integer getTicketsAvailable() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.events.start_time</code>.
     */
    public void setStartTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.events.start_time</code>.
     */
    public LocalDateTime getStartTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.events.end_time</code>.
     */
    public void setEndTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.events.end_time</code>.
     */
    public LocalDateTime getEndTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.events.image_url</code>.
     */
    public void setImageUrl(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.events.image_url</code>.
     */
    public String getImageUrl() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventsRecord
     */
    public EventsRecord() {
        super(Events.EVENTS);
    }

    /**
     * Create a detached, initialised EventsRecord
     */
    public EventsRecord(Integer id, String title, String description, String location, Integer price, Integer ticketsAvailable, LocalDateTime startTime, LocalDateTime endTime, String imageUrl) {
        super(Events.EVENTS);

        setId(id);
        setTitle(title);
        setDescription(description);
        setLocation(location);
        setPrice(price);
        setTicketsAvailable(ticketsAvailable);
        setStartTime(startTime);
        setEndTime(endTime);
        setImageUrl(imageUrl);
        resetTouchedOnNotNull();
    }
}
